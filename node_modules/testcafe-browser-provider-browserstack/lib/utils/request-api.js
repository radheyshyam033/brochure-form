"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const pinkie_1 = __importDefault(require("pinkie"));
const request_promise_1 = __importDefault(require("request-promise"));
const ERROR_MESSAGES = __importStar(require("../templates/error-messages"));
const apiRequestPromise = pinkie_1.default.resolve(null);
function default_1(apiPath, params = {}) {
    if (!process.env['BROWSERSTACK_USERNAME'] || !process.env['BROWSERSTACK_ACCESS_KEY'])
        throw new Error(ERROR_MESSAGES.BROWSERSTACK_AUTHENTICATION_FAILED());
    var { body, executeImmediately } = params, queryParams = __rest(params, ["body", "executeImmediately"]);
    var opts = {
        url: apiPath.url,
        auth: {
            user: process.env['BROWSERSTACK_USERNAME'],
            pass: process.env['BROWSERSTACK_ACCESS_KEY'],
        },
        headers: {
            'user-agent': 'testcafe-browserstack',
        },
        qs: Object.assign({}, queryParams),
        method: apiPath.method || 'GET',
        json: apiPath.encoding === void 0
    };
    const proxy = process.env['BROWSERSTACK_PROXY'];
    if (proxy)
        opts.proxy = `http://${proxy}`;
    if (body)
        opts.body = body;
    if (apiPath.encoding !== void 0)
        opts.encoding = apiPath.encoding;
    const chainPromise = executeImmediately ? pinkie_1.default.resolve(null) : apiRequestPromise;
    const currentRequestPromise = chainPromise
        .then(() => request_promise_1.default(opts))
        .catch(error => {
        if (error.statusCode === 401)
            throw new Error(ERROR_MESSAGES.BROWSERSTACK_AUTHENTICATION_FAILED());
        throw error;
    });
    return currentRequestPromise;
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWVzdC1hcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvcmVxdWVzdC1hcGkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvREFBNkI7QUFDN0Isc0VBQXNDO0FBQ3RDLDRFQUE4RDtBQUU5RCxNQUFNLGlCQUFpQixHQUFHLGdCQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRWhELG1CQUF5QixPQUFPLEVBQUUsTUFBTSxHQUFHLEVBQUU7SUFDekMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUM7UUFDaEYsTUFBTSxJQUFJLEtBQUssQ0FBQyxjQUFjLENBQUMsa0NBQWtDLEVBQUUsQ0FBQyxDQUFDO0lBRXpFLElBQUksRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEtBQXFCLE1BQU0sRUFBdEIsV0FBVyxVQUFLLE1BQU0sRUFBckQsOEJBQTRDLENBQVMsQ0FBQztJQUUxRCxJQUFJLElBQUksR0FBRztRQUNQLEdBQUcsRUFBRyxPQUFPLENBQUMsR0FBRztRQUNqQixJQUFJLEVBQUU7WUFDRixJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQztZQUMxQyxJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQztTQUMvQztRQUVELE9BQU8sRUFBRTtZQUNMLFlBQVksRUFBRSx1QkFBdUI7U0FDeEM7UUFFRCxFQUFFLG9CQUFPLFdBQVcsQ0FBRTtRQUV0QixNQUFNLEVBQUUsT0FBTyxDQUFDLE1BQU0sSUFBSSxLQUFLO1FBQy9CLElBQUksRUFBSSxPQUFPLENBQUMsUUFBUSxLQUFLLEtBQUssQ0FBQztLQUN0QyxDQUFDO0lBRUYsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBRWhELElBQUksS0FBSztRQUNMLElBQUksQ0FBQyxLQUFLLEdBQUcsVUFBVSxLQUFLLEVBQUUsQ0FBQztJQUVuQyxJQUFJLElBQUk7UUFDSixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUVyQixJQUFJLE9BQU8sQ0FBQyxRQUFRLEtBQUssS0FBSyxDQUFDO1FBQzNCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUVyQyxNQUFNLFlBQVksR0FBRyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsZ0JBQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDO0lBRXBGLE1BQU0scUJBQXFCLEdBQUcsWUFBWTtTQUNyQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMseUJBQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN6QixLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDWCxJQUFJLEtBQUssQ0FBQyxVQUFVLEtBQUssR0FBRztZQUN4QixNQUFNLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxrQ0FBa0MsRUFBRSxDQUFDLENBQUM7UUFFekUsTUFBTSxLQUFLLENBQUM7SUFDaEIsQ0FBQyxDQUFDLENBQUM7SUFFUCxPQUFPLHFCQUFxQixDQUFDO0FBQ2pDLENBQUM7QUE5Q0QsNEJBOENDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb21pc2UgZnJvbSAncGlua2llJztcbmltcG9ydCByZXF1ZXN0IGZyb20gJ3JlcXVlc3QtcHJvbWlzZSc7XG5pbXBvcnQgKiBhcyBFUlJPUl9NRVNTQUdFUyBmcm9tICcuLi90ZW1wbGF0ZXMvZXJyb3ItbWVzc2FnZXMnO1xuXG5jb25zdCBhcGlSZXF1ZXN0UHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZShudWxsKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGFwaVBhdGgsIHBhcmFtcyA9IHt9KSB7XG4gICAgaWYgKCFwcm9jZXNzLmVudlsnQlJPV1NFUlNUQUNLX1VTRVJOQU1FJ10gfHwgIXByb2Nlc3MuZW52WydCUk9XU0VSU1RBQ0tfQUNDRVNTX0tFWSddKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoRVJST1JfTUVTU0FHRVMuQlJPV1NFUlNUQUNLX0FVVEhFTlRJQ0FUSU9OX0ZBSUxFRCgpKTtcblxuICAgIHZhciB7IGJvZHksIGV4ZWN1dGVJbW1lZGlhdGVseSwgLi4ucXVlcnlQYXJhbXMgfSA9IHBhcmFtcztcblxuICAgIHZhciBvcHRzID0ge1xuICAgICAgICB1cmw6ICBhcGlQYXRoLnVybCxcbiAgICAgICAgYXV0aDoge1xuICAgICAgICAgICAgdXNlcjogcHJvY2Vzcy5lbnZbJ0JST1dTRVJTVEFDS19VU0VSTkFNRSddLFxuICAgICAgICAgICAgcGFzczogcHJvY2Vzcy5lbnZbJ0JST1dTRVJTVEFDS19BQ0NFU1NfS0VZJ10sXG4gICAgICAgIH0sXG5cbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ3VzZXItYWdlbnQnOiAndGVzdGNhZmUtYnJvd3NlcnN0YWNrJyxcbiAgICAgICAgfSxcblxuICAgICAgICBxczogeyAuLi5xdWVyeVBhcmFtcyB9LFxuXG4gICAgICAgIG1ldGhvZDogYXBpUGF0aC5tZXRob2QgfHwgJ0dFVCcsXG4gICAgICAgIGpzb246ICAgYXBpUGF0aC5lbmNvZGluZyA9PT0gdm9pZCAwXG4gICAgfTtcblxuICAgIGNvbnN0IHByb3h5ID0gcHJvY2Vzcy5lbnZbJ0JST1dTRVJTVEFDS19QUk9YWSddO1xuXG4gICAgaWYgKHByb3h5KVxuICAgICAgICBvcHRzLnByb3h5ID0gYGh0dHA6Ly8ke3Byb3h5fWA7XG5cbiAgICBpZiAoYm9keSlcbiAgICAgICAgb3B0cy5ib2R5ID0gYm9keTtcblxuICAgIGlmIChhcGlQYXRoLmVuY29kaW5nICE9PSB2b2lkIDApXG4gICAgICAgIG9wdHMuZW5jb2RpbmcgPSBhcGlQYXRoLmVuY29kaW5nO1xuXG4gICAgY29uc3QgY2hhaW5Qcm9taXNlID0gZXhlY3V0ZUltbWVkaWF0ZWx5ID8gUHJvbWlzZS5yZXNvbHZlKG51bGwpIDogYXBpUmVxdWVzdFByb21pc2U7XG5cbiAgICBjb25zdCBjdXJyZW50UmVxdWVzdFByb21pc2UgPSBjaGFpblByb21pc2VcbiAgICAgICAgLnRoZW4oKCkgPT4gcmVxdWVzdChvcHRzKSlcbiAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXNDb2RlID09PSA0MDEpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKEVSUk9SX01FU1NBR0VTLkJST1dTRVJTVEFDS19BVVRIRU5USUNBVElPTl9GQUlMRUQoKSk7XG5cbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9KTtcblxuICAgIHJldHVybiBjdXJyZW50UmVxdWVzdFByb21pc2U7XG59XG4iXX0=